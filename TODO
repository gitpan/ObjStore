--------------------------------------------------------------------
TODO      DOTODOTODOTODOTODOTODOTODOTODOTODOTODOTODOTODOTO      TODO


If you are interested in contributing, subscribe to the OS/Perl
mailing list.  Send email to majordomo@parallax.co.uk with the
following in the body of your message:
  "subscribe perl-objectstore you@your.company.com"


+ IDEAS +

testing
  OSSV::compare
  redesign t/1index.t

ospeek
  style - raw, vanilla, etc...
  -depth switch?

posh
  factor more!
  autodetect @INC modifications and print help message
  persist command history!
  tkposh ?

generate 'new' methods at compile time!

CLEAR & GIMME_V optimizations seem broken with tied hashes; verify and
submit bug reports (or fix the code!)

SV set magic?

Restart read transactions without jumping up the stack!
  begin('update!',...)

factor error messages like diagnostics.pm


+ VAGUE POSSIBILITIES +

Table3
  add_index should create a scratch cursor to speed fetch?

Threads!
  renovate thread specific stuff in ObjStore.xs

use Error

Autoclassloading upon open?  Maybe not, you don't know what to load

pathexam
  invisibly auto-traverse references?

get_database
  factor
  os_server::get_databases() ignores bless

prune debugging stuff

Improve transaction memory management.  Go back to using doubly-linked
lists to destroy the bridge at soonest point.

iterating over AVHV keys is broken - cursor is stored in the ossv_bridge
  unmagic the keys hash - make non-lazy?

posh
  improve pre/post eval logic
  Devel::Symdump->methods when peeking if blessed?
  Multiple sessions per user?  Who cares?
  Call system() when in ufs?  How about rawfs?
Peeker
  fix comma - $o->comma, then check in $o->nl
  fix for "$at = " prefix ?

cache last lookup to avoid gv_fetchmethod(NOREFS)?

script to insure consistent podding? (get Pod::Parser?)

finish migration to OSPV_Cursor2

assignment to $SIG{SEGV} should not reset SEGV handler

transaction hooks?

depreciate os_object_cursor?

ObjStore::File!  Use a FatTree of 4K buffers?

automatically spooge $ObjStore::RUN_TIME if @ISA changes?

install HTML versions of the pod files & gif image

notifications
  batch notify
  notify should in/out the string length - #SE057480_O#

change_schema_key:
  delete database INC, checksum %INC, light up security flag
  open: require each %INC, verify checksums (unless some flags is set)
  TAINTing?

Make XS code more efficient.  (How?)

Evolve the schema to eliminate this harmless annoyance:  The object at 0xdff30194(</elvis/export2/os/tmp/perltest | 2 | 194>)(type "OSPV_hvdict"), contains a pointer at 0xdff301a0(OSPV_hvdict::OSPV_Generic::OSPV_Container::OSSVPV.classname) with the illegal value 0xe0582d28. The declared type "char" is incompatible with the type of the object at address </elvis/export2/os/tmp/perltest | 4 | 2d28>(OSPV_avarray::OSPV_Generic::OSPV_Container::OSSVPV::os_virtual_behavior|vtbl{os_virtual_behavior*}).  The type of this object is: OSPV_avarray.


+ BIGGISH PROJECTS +

Support for multiple application schemas (expected 1Q98)

Needed is a more flexible hash table that can serve to replace
os_Dictionary and also be used as an ObjStore::Index.  Also, splash
hash performance would be easy to improve.


+ CORE-PERL WISH LIST +

The TIE interfaces are not as detailed as the built-ins.  I should be
able to hide whatever necessary complexity in the module that
implements the 'tie' so the user doesn't have to know anything
special.  How about lvalues?  How about proper support for nested
structures?
