What do you get when you cross a mission-critical enterprise-class
database with a camel?


Name           DSLI  Description                                  Info
-----------    ----  -------------------------------------------- -----
ObjStore       Rm+O  ObjectStore OODBMS Interface                 JPRIT

- Requires ObjectStore OODBMS (http://www.odi.com) & perl 5.004_04
- Perl 5.005 recommended (when available)

Get it via http://www.perl.com/CPAN/authors/id/JPRIT/ !


##################
# RECENT CHAN@ES #
##################


** 01-18-98 RELEASE 1.25

- Completed test coverage analysis of the C++ code (with the
assistance of Devel::CCov).  A number of minor bugs were uncovered and
fixed.  Most notable bug: splash hashes did not take advantage of
already empty slots during STORE.

- Fixed: problems when doing updates while two databases are open, one
in mvcc mode and one in update mode.  $db->is_writable is now the
preferred method to determine if you can update data.

- Split each group of collection representations into its own XS file.
Optimized creation of new persistent objects.  (This may cause
backward compatibility problems if you were passing an exact
representation type to a 'new' method.)  The 'new' method will be
auto-generated at compile-time in a forthcoming release.


** 01-10-98 RELEASE 1.24

- The index readonly locking has been tweaked again.  You'll need to
re-create any indices.  Let me know if I got it right this time!

- Re-organized the logic of blessing with a significant performance
improvement.  Greatly expanded tracking of version numbers.  Be aware
that bless now requires all classes throughout the @ISA heirarchy to
set their $VERSION since is_evolved compares them (and no longer
compares the @ISA tree).

- Persistent per-class globals via a new $o->stash() method.

- Improved the API for private root data.  Also, moved the private
root to a separate segment (so it's easier to study memory usage).

- $db->sync_INC uses unshift instead of push.


see ./INSTALL for hints on installation
see ./UPGRADE to evolve databases from prior releases
see ./TODO for a list of stuff in the queue
see ./CHANGES for a visionary perspective


Perl-ObjectStore mailing list:

majordomo@parallax.co.uk   "subscribe perl-objectstore you@your.company.com"

(If you think you've run into a bug, try running your script with
"perl -MObjStore=PANIC" and mail the output to the mailing list.)

-------------------------------------------------------------------
Copyright © 1997-1998 Joshua Nathaniel Pritikin.  All rights reserved.

This package is free software and is provided "as is" without express
or implied warranty.  It may be used, redistributed and/or modified
under the terms of the Perl Artistic License (see
http://www.perl.com/perl/misc/Artistic.html)
