Copyright (c) 1997 Joshua Nathaniel Pritikin.  All rights reserved.
This package is free software; you can redistribute it and/or
modify it under the same terms as Perl itself.


Name           DSLI  Description                                  Info
-----------    ----  -------------------------------------------- -----
ObjStore       Rm+O  ObjectStore OODBMS Interface                 JPRIT

Interface to ObjectStore OODBMS (http://www.odi.com).  Stores scalars,
sets, hashes, and references directly in the database without any
flattening of nested or circular structures.  Virtual memory mechanism
used to make read/write access nearly as fast as memory mapped files.
Includes CGI support module for `Perl Embedded HTML'.  Databases can
be accessed from Perl, C++, or Java.

Available via http://www.perl.org/CPAN/modules/by-module/ObjStore

           << This is the relational database killer app! >>


Perl-ObjectStore mailing list:

majordomo@parallax.co.uk   "subscribe perl-objectstore you@your.company.com"


see ./INSTALL for installation instructions
see ./TODO for list of things to do
see ./CHANGES for a historical perspective


### RECENT CHANGES ###


** 09-11-97 Released 1.13

- Improve ObjectStore API support.


** 09-02-97 Released 1.12

- HTML::PHTML and Eval modules added.  HTML::PHTML gives you a simple
and powerful "Perl Embedded HTML" page cache for CGI programs.
Includes all the best features of HTML::Embperl and ePerl in about 340
lines of code.  HTML::PHTML module does not require ObjStore.

- No other changes.


** 08-16-97 Released 1.11

- Updates refcnts for transient references in update & abort_only
transactions.  Persistent memory leaks now impossible.

- ospeek restricted to show only three instances per class.

- Minor fixes (both important and less important).

- No schema changes.


### FUTURE PLANS ###

Preliminary design of Verity full text indexing interface below.  Should
the index membership be kept in each member or not?  Leaning towards 'no'.

$Txt->index($indexHandle, $userPointer)
	$indexHandle - the specific Verity index object
	$userPointer - returned together with the match score after a search

  This can be called multiple times for different indexes.

$Txt->reindex;                   # call if string is changed
$Txt->unindex($indexHandle);


